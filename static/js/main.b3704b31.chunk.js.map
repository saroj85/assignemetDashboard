{"version":3,"sources":["redux/reducer/team.js","redux/type/team.js","redux/reducer/index.js","store.js","component/header/header.styled.js","redux/action/helper.js","component/header/index.js","redux/action/team.js","component/lefter/lefter.styled.js","component/lefter/index.js","component/righter/righter.styled.js","component/userCard/userCard.styled.js","component/userCard/index.js","component/righter/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","type","teams","id","name","users","teamId","description","currentTeamId","undefined","teamReducer","state","action","temp_temps","team","data","push","temp_users","user","filter","rootReducer","combineReducers","store","createStore","reducer","process","REACT_APP_MODE","compose","applyMiddleware","thunk","composeWithDevTools","Header","styled","div","dispatchAction","dispatch","error","message","recordsCount","generate_unique_key","prefix","Date","getTime","toString","Math","floor","random","connect","add_team","a","props","useState","teamInput","setTeamInput","setType","style","display","flexDirection","backgroundColor","padding","paddingTop","alignItems","borderRadius","className","onChange","e","target","value","placeholder","onClick","length","alert","addTeam","MainLefter","MenuBox","active","update_current_team","map","index","key","RighterMain","UserCardMain","add_user","delete_user","setName","setDescription","useEffect","ButtonClicked","_user","localUsers","setUsers","searchValue","setSearchValue","sort_users","JSON","parse","stringify","toLowerCase","includes","Fragment","onSearchUser","justifyContent","flexWrap","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.b3704b31.chunk.js","sourcesContent":["import * as actionType from '../type/team';\n\n\n\nconst initialState = {\n    type: actionType.TEAM_INIT,\n    teams: [\n        {\n            id: 11,\n            name: 'team1',\n\n        }\n    ],\n    users: [\n        {\n            id: 12,\n            name: 'saroj kumar',\n            teamId: 11,\n            description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\"\n        }\n    ],\n    currentTeamId: undefined\n};\n\n\nconst teamReducer = (state, action) => {\n    if (!state || typeof action.type === 'undefined') {\n        return initialState;\n    }\n\n    switch (action.type) {\n        case actionType.ADD_TEAM_SUCCESS:\n            let temp_temps = state.teams ? [...state.teams] : [];\n            let team = action.data;\n            if (team) {\n                temp_temps.push(team)\n            }\n\n            return {\n                ...state,\n                type: action.type,\n                teams: temp_temps\n            };\n\n        case actionType.ADD_USER_INSIDE_TEAM:\n            let temp_users = state.users ? [...state.users] : [];\n            let user = action.data;\n            temp_users.push(user)\n            return {\n                ...state,\n                type: action.type,\n                users: temp_users\n            }\n        case actionType.DELETE_USER_INSIDE_TEAM:\n            return {\n                ...state,\n                type: action.type,\n                users: state.users.filter(user => user.id !== action.data)\n            }\n\n        case actionType.UPDATE_CURRENT_ID:\n\n            return {\n                ...state,\n                type: action.type,\n                currentTeamId: action.data\n            }\n\n        default:\n            return { ...state };\n    }\n}\n\nexport default teamReducer;","export const TEAM_INIT = '/module/TEAM/init';\nexport const ADD_TEAM_SUCCESS = '/module/TEAM/addTEAMsucess';\nexport const DELETE_TEAM_SUCCESS = '/module/TEAM/DELETE_TEAM_SUCCESS';\nexport const ADD_USER_INSIDE_TEAM = '/module/TEAM/add_user_success';\nexport const DELETE_USER_INSIDE_TEAM = '/module/TEAM/DELETE_user_success';\nexport const UPDATE_CURRENT_ID = '/module/TEAM/UPDATE_CURRENT_ID';\n","\nimport { combineReducers } from 'redux';\nimport teamReducer from './team'\n\n\n\nconst rootReducer = combineReducers(\n    {\n        teamReducer: teamReducer,\n\n\n    }\n);\n\n\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport reducer from './redux/reducer';\n\nexport const _store =  createStore(\n  reducer,\n  process.env.REACT_APP_MODE === 'production' ? compose(applyMiddleware(thunk)) : composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport const store = _store; \n\n","import styled from 'styled-components';\n\n\nexport const Header = styled.div`\n    width: 100%;\n    height: 80px;\n    background-color: #cdd8db;\n    box-sizing: border-box;\n    padding: 0px 20px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    font-family: 'Lato', sans-serif;\n\n    .row{\n        display: flex;\n        flex-direction: column;\n        margin-left: 20px;\n\n        &:nth-child(1){\n            margin-left: 0px;\n        }\n    }\n\n    label{\n        color: #8b9092;\n        font-size: 12px;\n        margin-bottom: 5px;\n    }\n    select{\n        height: 30px;\n        background-color: #cdd8db;\n        width: 200px;\n        \n    }\n    input {\n        height: 30px;\n        background-color: #cdd8db;\n        box-sizing: border-box;\n        padding: 0px 10px;\n        width: 200px;\n    }\n\n    button{\n        margin-left: 20px;\n        height: 40px;\n        background-color: #efa730;\n        color: #fff;\n        border: 0px;\n        cursor: pointer;\n        width: 107px;\n        border-radius: 3px;\n\n        &:hover{\n            opacity: .6;\n        }\n\n    }\n`;","\n/**\n * \n * @param {*} dispatch \n * @param {*} type \n * @param {*} data \n * @param {*} error \n * @param {*} message \n * @param {*} recordsCount \n */\n\nexport const dispatchAction = (dispatch, type, data, error, message, recordsCount) => {\n    dispatch({\n        type,\n        message,\n        data,\n        error,\n        recordsCount\n    });\n};\n\n\nexport const generate_unique_key = prefix => {\n    if (prefix) {\n        return prefix + '_' + (new Date().getTime()).toString(36) + (new Date().getTime() + Math.floor(Math.random() * 100000)).toString(36);\n    }\n    else {\n        return (new Date().getTime()).toString(36) + (new Date().getTime() + Math.floor(Math.random() * 100000)).toString(36);\n    }\n};","import React, { useEffect, useState } from 'react'\nimport { Header } from './header.styled';\nimport { connect } from 'react-redux';\nimport { add_team } from '../../redux/action/team'\n\n\nconst Index = (props) => {\n\n    const [teamInput, setTeamInput] = useState('')\n    const [type, setType] = useState('team')\n\n\n    // here we are calling add team function \n    const addTeam = () => {\n        if (!type) {\n            alert(\"Please select type\")\n        }\n        else if (!teamInput || teamInput.length <= 1) {\n            alert(\"Please enter team name\")\n        }\n        else {\n            let team = {\n                type: type,\n                name: teamInput,\n            }\n            props.add_team(team)\n            setTeamInput('')\n        }\n    }\n\n    return (\n        <Header>\n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                backgroundColor: 'white',\n                padding: '10px',\n                paddingTop: 2,\n                alignItems: 'flex-end',\n                borderRadius: 5\n            }}>\n                <div className=\"row\">\n                    <label>Select Type</label>\n                    <select name=\"team\" id=\"team\" onChange={(e) => setType(e.target.value)}>\n                        <option value=\"team\">Team</option>\n                    </select>\n                </div>\n\n                <div className=\"row\">\n                    <label>Team Name</label>\n                    <input placeholder=\"Enter Name\" type=\"text\" value={teamInput} onChange={(e) => setTeamInput(e.target.value)} />\n                </div>\n\n                <div>\n                    <button onClick={() => addTeam()}>CREATE</button>\n                </div>\n            </div>\n        </Header>\n    )\n}\n\n\n\nconst mapStateToProps = state => {\n    const { teams } = state.teamReducer;\n\n    return { teams }\n};\n\n\nexport default connect(mapStateToProps, { add_team })(Index);\n\n\n","import * as actionType from '../type/team';\nimport { dispatchAction, generate_unique_key } from './helper';\n\n\nexport const add_team = (team) => async dispatch => {\n    let id = generate_unique_key();\n    let data = team\n    data.id = id\n    await dispatchAction(dispatch, actionType.ADD_TEAM_SUCCESS, data, undefined, undefined, undefined);\n\n}\n\n\nexport const delete_team = (id) => async dispatch => {\n\n    await dispatchAction(dispatch, actionType.DELETE_TEAM_SUCCESS, id, undefined, undefined, undefined);\n\n}\nexport const update_current_team = (id) => async dispatch => {\n\n    await dispatchAction(dispatch, actionType.UPDATE_CURRENT_ID, id, undefined, undefined, undefined);\n\n}\n\nexport const add_user = (user) => async dispatch =>{\n\n    await dispatchAction(dispatch, actionType.ADD_USER_INSIDE_TEAM, user, undefined, undefined, undefined);\n\n}\n\n\nexport const delete_user = (id) => async dispatch =>{\n\n    await dispatchAction(dispatch, actionType.DELETE_USER_INSIDE_TEAM, id, undefined, undefined, undefined);\n\n}","import styled from 'styled-components';\n\nexport const MainLefter = styled.div`\n    width: 20%;\n    background-color:#eaeaea91;\n    box-sizing: border-box;\n    padding: 20px 10px;\n    height: calc(100vh - 80px);\n\n\n    h1{ \n        margin: 0px;\n        margin-bottom: 12px;\n        font-size: 18px;\n        font-weight: 400;\n    }\n`;\n\n\nexport const MenuBox = styled.div`\n        background-color: ${props => props.active ? \"#efa730\" : '#fff'};\n        color: ${props => props.active ? \"#fff\" : \"#222\"};\n        height: 30px;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        padding: 4px 7px;\n        border-radius: 1px;\n        font-size: 15px;\n        position: relative;\n        margin-bottom: 14px;\n        cursor: pointer;\n        border: 1px solid #eaeaea;\n\n\n    &:after{\n        position: absolute;\n        content: '';\n        right: 0px;\n        height: 100%;\n        width: 7px;\n        background: #f79606;\n    }\n\n`;","import React, { useState } from 'react';\nimport { MainLefter, MenuBox } from './lefter.styled';\nimport { connect } from 'react-redux';\nimport { update_current_team } from '../../redux/action/team'\n\nconst Index = (props) => {\n    const { teams, update_current_team, currentTeamId } = props;\n\n    if (!teams) {\n        return <p>Please add team</p>\n    }\n\n\n    return (\n        <MainLefter>\n            <h1>Teams</h1>\n            {teams && teams.length > 0 && teams.map((team, index) => {\n                return (\n                    <MenuBox key={\"menu\" + index} active={currentTeamId === team.id} onClick={() => update_current_team(team.id)}>{team.name}</MenuBox>\n                )\n            })}\n        </MainLefter>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    const { teams, currentTeamId } = state.teamReducer;\n\n    return { teams, currentTeamId }\n};\n\n\nexport default connect(mapStateToProps, { update_current_team })(Index);\n\n","import styled from 'styled-components';\n\nexport const RighterMain = styled.div`\n\n    width: 78%;\n    background-color: #fff;\n    margin-left: 1%;\n    height: calc(100vh - 80px);\n    overflow-y: auto;\n\n\n    .heading{\n        padding: 16px 0px;\n        border-bottom: 2px solid #ccc;\n        margin-bottom: 15px;\n        font-weight: 400;\n        color: #272424;\n        font-size: 20px;\n        text-transform: capitalize;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    input{\n        height: 30px;\n        width: 190px;\n        border: 1px solid #ccc;\n        border-radius: 3px;\n        padding: 5px;\n        box-sizing: border-box;\n        /* margin-right: 100px; */\n    }\n\n\n`;","import styled from 'styled-components';\n\n\nexport const UserCardMain = styled.div`\n    background: #cdd8db;\n    width:  300px;\n    box-sizing: border-box;\n    padding: 10px;\n    margin-bottom: 10px;\n    margin-right: 10px;\n    border-radius: 2px;\n    box-shadow: 2px 2px 3px #00000038;\n\n    div{\n        margin-bottom: 15px;\n        width: 100%;\n    }\n    input{\n        width: 100%;\n        height: 38px;\n        padding: 3px 10px;\n        border-radius: 3px;\n        box-sizing: border-box;\n        border: 1px solid #ccc;\n    }\n\n    textarea{\n        width: 100%;\n        height: 80px;\n        padding: 3px 10px;\n        border-radius: 3px;\n        box-sizing: border-box;\n        border: 1px solid #ccc;\n    }\n    label{ \n        display: block;\n        margin-bottom: 5px;\n        font-size: 12px;\n    }\n    button{\n        width: 100%;\n        height: 36px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        border-radius: 3px;\n        border: 0px;\n        font-weight:500;\n        font-size: 14px;\n        &:hover{\n            opacity: .8;\n        }\n    }\n    .create_user{\n        background-color: #efa730;\n        color: #fff;\n    }\n    .delete_user{\n        background: #ec2314;\n        color: #fff;\n    }\n`;","import React, { useState, useEffect } from 'react';\nimport { UserCardMain } from './userCard.styled'\nimport { add_user, delete_user } from '../../redux/action/team'\nimport { generate_unique_key } from '../../redux/action/helper';\nimport { connect } from 'react-redux';\n\n\nconst Index = (props) => {\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const { user, add_user, currentTeamId, delete_user } = props;\n\n\n    useEffect(() => {\n        if (user) {\n            setDescription(user.description);\n            setName(user.name)\n        }\n    })\n\n\n    const ButtonClicked = () => {\n        if (currentTeamId) {\n            let id = generate_unique_key();\n            let _user = {\n                teamId: currentTeamId,\n                id,\n                name: name,\n                description: description\n\n            }\n            if (!name) {\n                alert(\"please Enter Name\")\n            }\n            else if (!description) {\n                alert(\"please Enter Description\")\n            }\n            else {\n                if (user) {\n                    delete_user(user.id)\n                }\n                else {\n                    add_user(_user)\n                    setName('')\n                    setDescription('')\n                }\n            }\n        }\n\n    }\n\n    return (\n        <UserCardMain>\n            <div>\n                <label>Name</label>\n                <input type=\"text\" placeholder=\"Enter Name\" value={name} onChange={(e) => {\n                    if (!user) {\n                        setName(e.target.value)\n                    }\n                }} />\n            </div>\n\n            <div>\n                <label>Description</label>\n                <textarea value={description} onChange={(e) => {\n                    if (!user) {\n                        setDescription(e.target.value)\n                    }\n                }} />\n            </div>\n\n            {user ? <button className=\"delete_user\" onClick={() => ButtonClicked()}>Delete User &nbsp; &nbsp; <i className=\"fas fa-minus\"></i> </button> : <button className=\"create_user\" onClick={() => ButtonClicked()}>Create User &nbsp; &nbsp; <i className=\"fas fa-plus\"></i> </button>}\n\n        </UserCardMain>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    const { currentTeamId } = state.teamReducer;\n    return { currentTeamId }\n};\n\n\nexport default connect(mapStateToProps, { add_user, delete_user })(Index);\n","import React, { useEffect, useState } from 'react';\nimport { RighterMain } from './righter.styled';\nimport UserCard from '../userCard';\nimport { connect } from 'react-redux';\n\n\nconst Index = (props) => {\n\n    const { currentTeamId, users, teams } = props;\n    const [localUsers, setUsers] = useState(undefined)\n    const [searchValue, setSearchValue] = useState('')\n\n    useEffect(() => {\n        if (users) {\n            setUsers(users)\n        }\n    }, [users])\n\n\n    const onSearchUser = (e) => {\n        let value = e.target.value;\n        setSearchValue(value)\n    }\n\n    const sort_users = localUsers && localUsers.length > 0 && JSON.parse(JSON.stringify(localUsers)).filter((data) => {\n        if (searchValue === '') {\n            return true;\n        }\n        else if (data.name.toLowerCase().includes(searchValue.toLowerCase())) {\n            return true;\n        }\n\n    });\n\n\n\n    return (\n        <React.Fragment>\n            {currentTeamId && (\n                <RighterMain>\n                    <div className=\"heading\">\n                        <span>{teams && teams.length > 0 && teams.map((team, index) => {\n                            if (team.id === currentTeamId) {\n                                return team.name\n                            }\n                        })}</span>\n\n                        <input type=\"text\" value={searchValue} placeholder=\"Search User\" onChange={(e) => onSearchUser(e)} />\n                    </div>\n\n                    <div style={{\n                        display: 'flex',\n                        justifyContent: 'flex-start',\n                        flexDirection: 'row',\n                        flexWrap: 'wrap'\n                    }}>\n\n                        <UserCard />\n                        {sort_users && sort_users.length > 0 && sort_users.map((user, index) => {\n                            if (user.teamId === currentTeamId) {\n                                return (\n                                    <UserCard key={\"user\" + index} user={user} />\n                                )\n                            }\n                        })}\n                    </div>\n                </RighterMain>\n            )}\n        </React.Fragment>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    const { users, currentTeamId, teams } = state.teamReducer;\n    return { users, currentTeamId, teams }\n};\n\nexport default connect(mapStateToProps, {})(Index);\n\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport Header from './component/header'\nimport Lefter from './component/lefter'\nimport Righter from './component/righter'\n\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <Header />\n      <div style={{\n        display: 'flex',\n        flexDirection: 'row'\n      }}>\n        <Lefter />\n        <Righter />\n      </div>\n\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}